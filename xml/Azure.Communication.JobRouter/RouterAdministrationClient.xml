<Type Name="RouterAdministrationClient" FullName="Azure.Communication.JobRouter.RouterAdministrationClient">
  <TypeSignature Language="C#" Value="public class RouterAdministrationClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouterAdministrationClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Azure.Communication.JobRouter.RouterAdministrationClient" />
  <TypeSignature Language="VB.NET" Value="Public Class RouterAdministrationClient" />
  <TypeSignature Language="F#" Value="type RouterAdministrationClient = class" />
  <AssemblyInfo>
    <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The Azure Communication Services Router Administration client.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RouterAdministrationClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of <see cref="T:Azure.Communication.JobRouter.RouterAdministrationClient" /> for mocking.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouterAdministrationClient (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.JobRouter.RouterAdministrationClient : string -&gt; Azure.Communication.JobRouter.RouterAdministrationClient" Usage="new Azure.Communication.JobRouter.RouterAdministrationClient connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.JobRouter.RouterAdministrationClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouterAdministrationClient (string connectionString, Azure.Communication.JobRouter.RouterClientOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, class Azure.Communication.JobRouter.RouterClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.#ctor(System.String,Azure.Communication.JobRouter.RouterClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, options As RouterClientOptions)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.JobRouter.RouterAdministrationClient : string * Azure.Communication.JobRouter.RouterClientOptions -&gt; Azure.Communication.JobRouter.RouterAdministrationClient" Usage="new Azure.Communication.JobRouter.RouterAdministrationClient (connectionString, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="options" Type="Azure.Communication.JobRouter.RouterClientOptions" />
      </Parameters>
      <Docs>
        <param name="connectionString">Connection string acquired from the Azure Communication Services resource.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.JobRouter.RouterAdministrationClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouterAdministrationClient (Uri endpoint, Azure.AzureKeyCredential credential, Azure.Communication.JobRouter.RouterClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.AzureKeyCredential credential, class Azure.Communication.JobRouter.RouterClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.#ctor(System.Uri,Azure.AzureKeyCredential,Azure.Communication.JobRouter.RouterClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As AzureKeyCredential, Optional options As RouterClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.JobRouter.RouterAdministrationClient : Uri * Azure.AzureKeyCredential * Azure.Communication.JobRouter.RouterClientOptions -&gt; Azure.Communication.JobRouter.RouterAdministrationClient" Usage="new Azure.Communication.JobRouter.RouterAdministrationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.AzureKeyCredential" />
        <Parameter Name="options" Type="Azure.Communication.JobRouter.RouterClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI of the Azure Communication Services resource.</param>
        <param name="credential">The <see cref="T:Azure.AzureKeyCredential" /> used to authenticate requests.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.JobRouter.RouterAdministrationClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouterAdministrationClient (Uri endpoint, Azure.Core.TokenCredential credential, Azure.Communication.JobRouter.RouterClientOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri endpoint, class Azure.Core.TokenCredential credential, class Azure.Communication.JobRouter.RouterClientOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.#ctor(System.Uri,Azure.Core.TokenCredential,Azure.Communication.JobRouter.RouterClientOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (endpoint As Uri, credential As TokenCredential, Optional options As RouterClientOptions = Nothing)" />
      <MemberSignature Language="F#" Value="new Azure.Communication.JobRouter.RouterAdministrationClient : Uri * Azure.Core.TokenCredential * Azure.Communication.JobRouter.RouterClientOptions -&gt; Azure.Communication.JobRouter.RouterAdministrationClient" Usage="new Azure.Communication.JobRouter.RouterAdministrationClient (endpoint, credential, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="endpoint" Type="System.Uri" />
        <Parameter Name="credential" Type="Azure.Core.TokenCredential" />
        <Parameter Name="options" Type="Azure.Communication.JobRouter.RouterClientOptions" />
      </Parameters>
      <Docs>
        <param name="endpoint">The URI of the Azure Communication Services resource.</param>
        <param name="credential">The TokenCredential used to authenticate requests, such as DefaultAzureCredential.</param>
        <param name="options">Client option exposing <see cref="P:Azure.Core.ClientOptions.Diagnostics" />, <see cref="P:Azure.Core.ClientOptions.Retry" />, <see cref="P:Azure.Core.ClientOptions.Transport" />, etc.</param>
        <summary> Initializes a new instance of <see cref="T:Azure.Communication.JobRouter.RouterAdministrationClient" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClassificationPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt; CreateClassificationPolicy (Azure.Communication.JobRouter.CreateClassificationPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ClassificationPolicy&gt; CreateClassificationPolicy(class Azure.Communication.JobRouter.CreateClassificationPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.CreateClassificationPolicy(Azure.Communication.JobRouter.CreateClassificationPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateClassificationPolicy (options As CreateClassificationPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClassificationPolicy)" />
      <MemberSignature Language="F#" Value="abstract member CreateClassificationPolicy : Azure.Communication.JobRouter.CreateClassificationPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&#xA;override this.CreateClassificationPolicy : Azure.Communication.JobRouter.CreateClassificationPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;" Usage="routerAdministrationClient.CreateClassificationPolicy (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateClassificationPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> (Optional) Options for creating classification policy.. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates or updates a classification policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateClassificationPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt; CreateClassificationPolicyAsync (Azure.Communication.JobRouter.CreateClassificationPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt; CreateClassificationPolicyAsync(class Azure.Communication.JobRouter.CreateClassificationPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.CreateClassificationPolicyAsync(Azure.Communication.JobRouter.CreateClassificationPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateClassificationPolicyAsync (options As CreateClassificationPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClassificationPolicy))" />
      <MemberSignature Language="F#" Value="abstract member CreateClassificationPolicyAsync : Azure.Communication.JobRouter.CreateClassificationPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt;&#xA;override this.CreateClassificationPolicyAsync : Azure.Communication.JobRouter.CreateClassificationPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt;" Usage="routerAdministrationClient.CreateClassificationPolicyAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateClassificationPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> (Optional) Options for creating classification policy.. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates a classification policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDistributionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt; CreateDistributionPolicy (Azure.Communication.JobRouter.CreateDistributionPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.DistributionPolicy&gt; CreateDistributionPolicy(class Azure.Communication.JobRouter.CreateDistributionPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.CreateDistributionPolicy(Azure.Communication.JobRouter.CreateDistributionPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDistributionPolicy (options As CreateDistributionPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DistributionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member CreateDistributionPolicy : Azure.Communication.JobRouter.CreateDistributionPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&#xA;override this.CreateDistributionPolicy : Azure.Communication.JobRouter.CreateDistributionPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;" Usage="routerAdministrationClient.CreateDistributionPolicy (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateDistributionPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Additional options that can be used while creating distribution policy. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates a distribution policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDistributionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt; CreateDistributionPolicyAsync (Azure.Communication.JobRouter.CreateDistributionPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt; CreateDistributionPolicyAsync(class Azure.Communication.JobRouter.CreateDistributionPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.CreateDistributionPolicyAsync(Azure.Communication.JobRouter.CreateDistributionPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDistributionPolicyAsync (options As CreateDistributionPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DistributionPolicy))" />
      <MemberSignature Language="F#" Value="abstract member CreateDistributionPolicyAsync : Azure.Communication.JobRouter.CreateDistributionPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt;&#xA;override this.CreateDistributionPolicyAsync : Azure.Communication.JobRouter.CreateDistributionPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt;" Usage="routerAdministrationClient.CreateDistributionPolicyAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateDistributionPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Additional options that can be used while creating distribution policy. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates a distribution policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateExceptionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt; CreateExceptionPolicy (Azure.Communication.JobRouter.CreateExceptionPolicyOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ExceptionPolicy&gt; CreateExceptionPolicy(class Azure.Communication.JobRouter.CreateExceptionPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.CreateExceptionPolicy(Azure.Communication.JobRouter.CreateExceptionPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateExceptionPolicy (Optional options As CreateExceptionPolicyOptions = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExceptionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member CreateExceptionPolicy : Azure.Communication.JobRouter.CreateExceptionPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&#xA;override this.CreateExceptionPolicy : Azure.Communication.JobRouter.CreateExceptionPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;" Usage="routerAdministrationClient.CreateExceptionPolicy (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateExceptionPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> (Optional) Options for creating an exception policy. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates or updates a exception policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateExceptionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt; CreateExceptionPolicyAsync (Azure.Communication.JobRouter.CreateExceptionPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt; CreateExceptionPolicyAsync(class Azure.Communication.JobRouter.CreateExceptionPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.CreateExceptionPolicyAsync(Azure.Communication.JobRouter.CreateExceptionPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateExceptionPolicyAsync (options As CreateExceptionPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExceptionPolicy))" />
      <MemberSignature Language="F#" Value="abstract member CreateExceptionPolicyAsync : Azure.Communication.JobRouter.CreateExceptionPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt;&#xA;override this.CreateExceptionPolicyAsync : Azure.Communication.JobRouter.CreateExceptionPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt;" Usage="routerAdministrationClient.CreateExceptionPolicyAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateExceptionPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> (Optional) Options for creating an exception policy. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates a new exception policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateQueue">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt; CreateQueue (Azure.Communication.JobRouter.CreateQueueOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.JobQueue&gt; CreateQueue(class Azure.Communication.JobRouter.CreateQueueOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.CreateQueue(Azure.Communication.JobRouter.CreateQueueOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateQueue (options As CreateQueueOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobQueue)" />
      <MemberSignature Language="F#" Value="abstract member CreateQueue : Azure.Communication.JobRouter.CreateQueueOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&#xA;override this.CreateQueue : Azure.Communication.JobRouter.CreateQueueOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;" Usage="routerAdministrationClient.CreateQueue (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateQueueOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for creating a job queue. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates or updates a queue. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt; CreateQueueAsync (Azure.Communication.JobRouter.CreateQueueOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.JobQueue&gt;&gt; CreateQueueAsync(class Azure.Communication.JobRouter.CreateQueueOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.CreateQueueAsync(Azure.Communication.JobRouter.CreateQueueOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateQueueAsync (options As CreateQueueOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobQueue))" />
      <MemberSignature Language="F#" Value="abstract member CreateQueueAsync : Azure.Communication.JobRouter.CreateQueueOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt;&#xA;override this.CreateQueueAsync : Azure.Communication.JobRouter.CreateQueueOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt;" Usage="routerAdministrationClient.CreateQueueAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.CreateQueueOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for creating a job queue. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates or updates a queue. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteClassificationPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteClassificationPolicy (string classificationPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteClassificationPolicy(string classificationPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.DeleteClassificationPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteClassificationPolicy (classificationPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteClassificationPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteClassificationPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="routerAdministrationClient.DeleteClassificationPolicy (classificationPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classificationPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="classificationPolicyId"> Id of the channel to delete. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Deletes a Classification Policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="classificationPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteClassificationPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteClassificationPolicyAsync (string classificationPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteClassificationPolicyAsync(string classificationPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.DeleteClassificationPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteClassificationPolicyAsync (classificationPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteClassificationPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteClassificationPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="routerAdministrationClient.DeleteClassificationPolicyAsync (classificationPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classificationPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="classificationPolicyId"> Id of the channel to delete. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Deletes a Classification Policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="classificationPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDistributionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteDistributionPolicy (string distributionPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteDistributionPolicy(string distributionPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.DeleteDistributionPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDistributionPolicy (distributionPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteDistributionPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteDistributionPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="routerAdministrationClient.DeleteDistributionPolicy (distributionPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributionPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="distributionPolicyId"> The id of the Distribution policy </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Delete a distribution policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="distributionPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDistributionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteDistributionPolicyAsync (string distributionPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteDistributionPolicyAsync(string distributionPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.DeleteDistributionPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteDistributionPolicyAsync (distributionPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteDistributionPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteDistributionPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="routerAdministrationClient.DeleteDistributionPolicyAsync (distributionPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributionPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="distributionPolicyId"> The Id of the Distribution Policy</param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Delete a distribution policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="distributionPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteExceptionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteExceptionPolicy (string exceptionPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteExceptionPolicy(string exceptionPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.DeleteExceptionPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteExceptionPolicy (exceptionPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteExceptionPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteExceptionPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="routerAdministrationClient.DeleteExceptionPolicy (exceptionPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptionPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="exceptionPolicyId"> Id of the exception policy to delete. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Deletes a exception policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exceptionPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteExceptionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteExceptionPolicyAsync (string exceptionPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteExceptionPolicyAsync(string exceptionPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.DeleteExceptionPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteExceptionPolicyAsync (exceptionPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteExceptionPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteExceptionPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="routerAdministrationClient.DeleteExceptionPolicyAsync (exceptionPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptionPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="exceptionPolicyId"> Id of the exception policy to delete. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Deletes a exception policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exceptionPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueue">
      <MemberSignature Language="C#" Value="public virtual Azure.Response DeleteQueue (string queueId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response DeleteQueue(string queueId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.DeleteQueue(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteQueue (queueId As String, Optional cancellationToken As CancellationToken = Nothing) As Response" />
      <MemberSignature Language="F#" Value="abstract member DeleteQueue : string * System.Threading.CancellationToken -&gt; Azure.Response&#xA;override this.DeleteQueue : string * System.Threading.CancellationToken -&gt; Azure.Response" Usage="routerAdministrationClient.DeleteQueue (queueId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueId"> Id of the queue to delete. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Deletes a queue by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&gt; DeleteQueueAsync (string queueId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response&gt; DeleteQueueAsync(string queueId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.DeleteQueueAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteQueueAsync (queueId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response)" />
      <MemberSignature Language="F#" Value="abstract member DeleteQueueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;&#xA;override this.DeleteQueueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&gt;" Usage="routerAdministrationClient.DeleteQueueAsync (queueId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueId"> Id of the queue to delete. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Deletes a queue by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClassificationPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Communication.JobRouter.Models.ClassificationPolicyItem&gt; GetClassificationPolicies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Communication.JobRouter.Models.ClassificationPolicyItem&gt; GetClassificationPolicies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetClassificationPolicies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassificationPolicies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ClassificationPolicyItem)" />
      <MemberSignature Language="F#" Value="abstract member GetClassificationPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.ClassificationPolicyItem&gt;&#xA;override this.GetClassificationPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.ClassificationPolicyItem&gt;" Usage="routerAdministrationClient.GetClassificationPolicies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Communication.JobRouter.Models.ClassificationPolicyItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves existing classification policies. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClassificationPoliciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.ClassificationPolicyItem&gt; GetClassificationPoliciesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Communication.JobRouter.Models.ClassificationPolicyItem&gt; GetClassificationPoliciesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetClassificationPoliciesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassificationPoliciesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ClassificationPolicyItem)" />
      <MemberSignature Language="F#" Value="abstract member GetClassificationPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.ClassificationPolicyItem&gt;&#xA;override this.GetClassificationPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.ClassificationPolicyItem&gt;" Usage="routerAdministrationClient.GetClassificationPoliciesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.ClassificationPolicyItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves existing classification policies. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClassificationPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt; GetClassificationPolicy (string classificationPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ClassificationPolicy&gt; GetClassificationPolicy(string classificationPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetClassificationPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassificationPolicy (classificationPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClassificationPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetClassificationPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&#xA;override this.GetClassificationPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;" Usage="routerAdministrationClient.GetClassificationPolicy (classificationPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classificationPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="classificationPolicyId"> The Id of the classification policy. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing classification policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="classificationPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetClassificationPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt; GetClassificationPolicyAsync (string classificationPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt; GetClassificationPolicyAsync(string classificationPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetClassificationPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetClassificationPolicyAsync (classificationPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClassificationPolicy))" />
      <MemberSignature Language="F#" Value="abstract member GetClassificationPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt;&#xA;override this.GetClassificationPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt;" Usage="routerAdministrationClient.GetClassificationPolicyAsync (classificationPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classificationPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="classificationPolicyId"> The Id of the classification policy </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing classification policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="classificationPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDistributionPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Communication.JobRouter.Models.DistributionPolicyItem&gt; GetDistributionPolicies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Communication.JobRouter.Models.DistributionPolicyItem&gt; GetDistributionPolicies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetDistributionPolicies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDistributionPolicies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of DistributionPolicyItem)" />
      <MemberSignature Language="F#" Value="abstract member GetDistributionPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.DistributionPolicyItem&gt;&#xA;override this.GetDistributionPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.DistributionPolicyItem&gt;" Usage="routerAdministrationClient.GetDistributionPolicies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Communication.JobRouter.Models.DistributionPolicyItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves existing distribution policies. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDistributionPoliciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.DistributionPolicyItem&gt; GetDistributionPoliciesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Communication.JobRouter.Models.DistributionPolicyItem&gt; GetDistributionPoliciesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetDistributionPoliciesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDistributionPoliciesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of DistributionPolicyItem)" />
      <MemberSignature Language="F#" Value="abstract member GetDistributionPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.DistributionPolicyItem&gt;&#xA;override this.GetDistributionPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.DistributionPolicyItem&gt;" Usage="routerAdministrationClient.GetDistributionPoliciesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.DistributionPolicyItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves existing distribution policies. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDistributionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt; GetDistributionPolicy (string distributionPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.DistributionPolicy&gt; GetDistributionPolicy(string distributionPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetDistributionPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDistributionPolicy (distributionPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DistributionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetDistributionPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&#xA;override this.GetDistributionPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;" Usage="routerAdministrationClient.GetDistributionPolicy (distributionPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributionPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="distributionPolicyId"> The Id of the distribution policy </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing distribution policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="distributionPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDistributionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt; GetDistributionPolicyAsync (string distributionPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt; GetDistributionPolicyAsync(string distributionPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetDistributionPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDistributionPolicyAsync (distributionPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DistributionPolicy))" />
      <MemberSignature Language="F#" Value="abstract member GetDistributionPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt;&#xA;override this.GetDistributionPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt;" Usage="routerAdministrationClient.GetDistributionPolicyAsync (distributionPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="distributionPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="distributionPolicyId"> The Id of the distribution Policy </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing distribution policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="distributionPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPolicies">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Communication.JobRouter.Models.ExceptionPolicyItem&gt; GetExceptionPolicies (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Communication.JobRouter.Models.ExceptionPolicyItem&gt; GetExceptionPolicies(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetExceptionPolicies(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExceptionPolicies (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of ExceptionPolicyItem)" />
      <MemberSignature Language="F#" Value="abstract member GetExceptionPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.ExceptionPolicyItem&gt;&#xA;override this.GetExceptionPolicies : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.ExceptionPolicyItem&gt;" Usage="routerAdministrationClient.GetExceptionPolicies cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Communication.JobRouter.Models.ExceptionPolicyItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves existing exception policies. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPoliciesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.ExceptionPolicyItem&gt; GetExceptionPoliciesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Communication.JobRouter.Models.ExceptionPolicyItem&gt; GetExceptionPoliciesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetExceptionPoliciesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExceptionPoliciesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of ExceptionPolicyItem)" />
      <MemberSignature Language="F#" Value="abstract member GetExceptionPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.ExceptionPolicyItem&gt;&#xA;override this.GetExceptionPoliciesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.ExceptionPolicyItem&gt;" Usage="routerAdministrationClient.GetExceptionPoliciesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.ExceptionPolicyItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves existing exception policies. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt; GetExceptionPolicy (string exceptionPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ExceptionPolicy&gt; GetExceptionPolicy(string exceptionPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetExceptionPolicy(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExceptionPolicy (exceptionPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExceptionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member GetExceptionPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&#xA;override this.GetExceptionPolicy : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;" Usage="routerAdministrationClient.GetExceptionPolicy (exceptionPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptionPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="exceptionPolicyId"> Id of the exception policy to retrieve. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing exception policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exceptionPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetExceptionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt; GetExceptionPolicyAsync (string exceptionPolicyId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt; GetExceptionPolicyAsync(string exceptionPolicyId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetExceptionPolicyAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExceptionPolicyAsync (exceptionPolicyId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExceptionPolicy))" />
      <MemberSignature Language="F#" Value="abstract member GetExceptionPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt;&#xA;override this.GetExceptionPolicyAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt;" Usage="routerAdministrationClient.GetExceptionPolicyAsync (exceptionPolicyId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exceptionPolicyId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="exceptionPolicyId"> Id of the exception policy to retrieve. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing exception policy by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="exceptionPolicyId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueue">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt; GetQueue (string queueId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.JobQueue&gt; GetQueue(string queueId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetQueue(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueue (queueId As String, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobQueue)" />
      <MemberSignature Language="F#" Value="abstract member GetQueue : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&#xA;override this.GetQueue : string * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;" Usage="routerAdministrationClient.GetQueue (queueId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueId"> Id of the queue to retrieve. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing queue by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueId" /> is null. </exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt; GetQueueAsync (string queueId, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.JobQueue&gt;&gt; GetQueueAsync(string queueId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetQueueAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueueAsync (queueId As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobQueue))" />
      <MemberSignature Language="F#" Value="abstract member GetQueueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt;&#xA;override this.GetQueueAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt;" Usage="routerAdministrationClient.GetQueueAsync (queueId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queueId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="queueId"> Id of the queue to retrieve. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves an existing queue by Id. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="queueId" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueues">
      <MemberSignature Language="C#" Value="public virtual Azure.Pageable&lt;Azure.Communication.JobRouter.Models.JobQueueItem&gt; GetQueues (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Pageable`1&lt;class Azure.Communication.JobRouter.Models.JobQueueItem&gt; GetQueues(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetQueues(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueues (Optional cancellationToken As CancellationToken = Nothing) As Pageable(Of JobQueueItem)" />
      <MemberSignature Language="F#" Value="abstract member GetQueues : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.JobQueueItem&gt;&#xA;override this.GetQueues : System.Threading.CancellationToken -&gt; Azure.Pageable&lt;Azure.Communication.JobRouter.Models.JobQueueItem&gt;" Usage="routerAdministrationClient.GetQueues cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Pageable&lt;Azure.Communication.JobRouter.Models.JobQueueItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves existing queues. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetQueuesAsync">
      <MemberSignature Language="C#" Value="public virtual Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.JobQueueItem&gt; GetQueuesAsync (System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.AsyncPageable`1&lt;class Azure.Communication.JobRouter.Models.JobQueueItem&gt; GetQueuesAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.GetQueuesAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetQueuesAsync (Optional cancellationToken As CancellationToken = Nothing) As AsyncPageable(Of JobQueueItem)" />
      <MemberSignature Language="F#" Value="abstract member GetQueuesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.JobQueueItem&gt;&#xA;override this.GetQueuesAsync : System.Threading.CancellationToken -&gt; Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.JobQueueItem&gt;" Usage="routerAdministrationClient.GetQueuesAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.AsyncPageable&lt;Azure.Communication.JobRouter.Models.JobQueueItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Retrieves existing queues. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateClassificationPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt; UpdateClassificationPolicy (Azure.Communication.JobRouter.UpdateClassificationPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ClassificationPolicy&gt; UpdateClassificationPolicy(class Azure.Communication.JobRouter.UpdateClassificationPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.UpdateClassificationPolicy(Azure.Communication.JobRouter.UpdateClassificationPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateClassificationPolicy (options As UpdateClassificationPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ClassificationPolicy)" />
      <MemberSignature Language="F#" Value="abstract member UpdateClassificationPolicy : Azure.Communication.JobRouter.UpdateClassificationPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&#xA;override this.UpdateClassificationPolicy : Azure.Communication.JobRouter.UpdateClassificationPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;" Usage="routerAdministrationClient.UpdateClassificationPolicy (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateClassificationPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> (Optional) Options for updating classification policy.. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates or updates a classification policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateClassificationPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt; UpdateClassificationPolicyAsync (Azure.Communication.JobRouter.UpdateClassificationPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt; UpdateClassificationPolicyAsync(class Azure.Communication.JobRouter.UpdateClassificationPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.UpdateClassificationPolicyAsync(Azure.Communication.JobRouter.UpdateClassificationPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateClassificationPolicyAsync (options As UpdateClassificationPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ClassificationPolicy))" />
      <MemberSignature Language="F#" Value="abstract member UpdateClassificationPolicyAsync : Azure.Communication.JobRouter.UpdateClassificationPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt;&#xA;override this.UpdateClassificationPolicyAsync : Azure.Communication.JobRouter.UpdateClassificationPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt;" Usage="routerAdministrationClient.UpdateClassificationPolicyAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ClassificationPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateClassificationPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> (Optional) Options for updating classification policy.. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates or updates classification policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateDistributionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt; UpdateDistributionPolicy (Azure.Communication.JobRouter.UpdateDistributionPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.DistributionPolicy&gt; UpdateDistributionPolicy(class Azure.Communication.JobRouter.UpdateDistributionPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.UpdateDistributionPolicy(Azure.Communication.JobRouter.UpdateDistributionPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateDistributionPolicy (options As UpdateDistributionPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of DistributionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member UpdateDistributionPolicy : Azure.Communication.JobRouter.UpdateDistributionPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&#xA;override this.UpdateDistributionPolicy : Azure.Communication.JobRouter.UpdateDistributionPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;" Usage="routerAdministrationClient.UpdateDistributionPolicy (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateDistributionPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> (Optional) Options for the distribution policy. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Updates a distribution policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateDistributionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt; UpdateDistributionPolicyAsync (Azure.Communication.JobRouter.UpdateDistributionPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt; UpdateDistributionPolicyAsync(class Azure.Communication.JobRouter.UpdateDistributionPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.UpdateDistributionPolicyAsync(Azure.Communication.JobRouter.UpdateDistributionPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateDistributionPolicyAsync (options As UpdateDistributionPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of DistributionPolicy))" />
      <MemberSignature Language="F#" Value="abstract member UpdateDistributionPolicyAsync : Azure.Communication.JobRouter.UpdateDistributionPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt;&#xA;override this.UpdateDistributionPolicyAsync : Azure.Communication.JobRouter.UpdateDistributionPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt;" Usage="routerAdministrationClient.UpdateDistributionPolicyAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.DistributionPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateDistributionPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> (Optional) Options for the distribution policy. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Updates a distribution policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateExceptionPolicy">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt; UpdateExceptionPolicy (Azure.Communication.JobRouter.UpdateExceptionPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ExceptionPolicy&gt; UpdateExceptionPolicy(class Azure.Communication.JobRouter.UpdateExceptionPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.UpdateExceptionPolicy(Azure.Communication.JobRouter.UpdateExceptionPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateExceptionPolicy (options As UpdateExceptionPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of ExceptionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member UpdateExceptionPolicy : Azure.Communication.JobRouter.UpdateExceptionPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&#xA;override this.UpdateExceptionPolicy : Azure.Communication.JobRouter.UpdateExceptionPolicyOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;" Usage="routerAdministrationClient.UpdateExceptionPolicy (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateExceptionPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for updating exception policy. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates or updates a exception policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateExceptionPolicyAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt; UpdateExceptionPolicyAsync (Azure.Communication.JobRouter.UpdateExceptionPolicyOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt; UpdateExceptionPolicyAsync(class Azure.Communication.JobRouter.UpdateExceptionPolicyOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.UpdateExceptionPolicyAsync(Azure.Communication.JobRouter.UpdateExceptionPolicyOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateExceptionPolicyAsync (options As UpdateExceptionPolicyOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of ExceptionPolicy))" />
      <MemberSignature Language="F#" Value="abstract member UpdateExceptionPolicyAsync : Azure.Communication.JobRouter.UpdateExceptionPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt;&#xA;override this.UpdateExceptionPolicyAsync : Azure.Communication.JobRouter.UpdateExceptionPolicyOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt;" Usage="routerAdministrationClient.UpdateExceptionPolicyAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.ExceptionPolicy&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateExceptionPolicyOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for updating exception policy. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates a new exception policy. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateQueue">
      <MemberSignature Language="C#" Value="public virtual Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt; UpdateQueue (Azure.Communication.JobRouter.UpdateQueueOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.JobQueue&gt; UpdateQueue(class Azure.Communication.JobRouter.UpdateQueueOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.UpdateQueue(Azure.Communication.JobRouter.UpdateQueueOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateQueue (options As UpdateQueueOptions, Optional cancellationToken As CancellationToken = Nothing) As Response(Of JobQueue)" />
      <MemberSignature Language="F#" Value="abstract member UpdateQueue : Azure.Communication.JobRouter.UpdateQueueOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&#xA;override this.UpdateQueue : Azure.Communication.JobRouter.UpdateQueueOptions * System.Threading.CancellationToken -&gt; Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;" Usage="routerAdministrationClient.UpdateQueue (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateQueueOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for updating a job queue. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates or updates a queue. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateQueueAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt; UpdateQueueAsync (Azure.Communication.JobRouter.UpdateQueueOptions options, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Azure.Response`1&lt;class Azure.Communication.JobRouter.Models.JobQueue&gt;&gt; UpdateQueueAsync(class Azure.Communication.JobRouter.UpdateQueueOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Azure.Communication.JobRouter.RouterAdministrationClient.UpdateQueueAsync(Azure.Communication.JobRouter.UpdateQueueOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateQueueAsync (options As UpdateQueueOptions, Optional cancellationToken As CancellationToken = Nothing) As Task(Of Response(Of JobQueue))" />
      <MemberSignature Language="F#" Value="abstract member UpdateQueueAsync : Azure.Communication.JobRouter.UpdateQueueOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt;&#xA;override this.UpdateQueueAsync : Azure.Communication.JobRouter.UpdateQueueOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt;" Usage="routerAdministrationClient.UpdateQueueAsync (options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Azure.Communication.JobRouter</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Azure.Response&lt;Azure.Communication.JobRouter.Models.JobQueue&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="Azure.Communication.JobRouter.UpdateQueueOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="options"> Options for updating a job queue. </param>
        <param name="cancellationToken"> (Optional) The cancellation token to use. </param>
        <summary> Creates or updates a queue. </summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="options" /> is null. </exception>
        <exception cref="T:Azure.RequestFailedException">The server returned an error. See <see cref="P:System.Exception.Message" /> for details returned from the server.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
